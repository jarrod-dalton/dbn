% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_dbn_unexported.R
\name{plot_dbn_unexported}
\alias{plot_dbn_expand_dynamic_network}
\alias{plot_dbn_expand_network}
\alias{plot_dbn_get_edge_text}
\alias{plot_dbn_get_node_default}
\alias{plot_dbn_get_node_string}
\alias{plot_dbn_get_node_type}
\alias{plot_dbn_get_shared_parent}
\alias{plot_dbn_get_star_node}
\alias{plot_dbn_get_subgraph}
\alias{plot_dbn_sanitize_custom_edge}
\alias{plot_dbn_unexported}
\alias{plot_dbn_write_edge}
\title{Unexported Utilities for \code{plot.dbn}}
\usage{
plot_dbn_expand_network(network, expand = FALSE)

plot_dbn_expand_dynamic_network(node, node_attr)

plot_dbn_get_node_string(node_name, custom_node, node_attr)

plot_dbn_get_node_type(node_name, node_attr)

plot_dbn_get_node_default(node_type)

plot_dbn_get_star_node(node_name, custom_node)

plot_dbn_get_subgraph(network)

plot_dbn_sanitize_custom_edge(custom_edge, custom_edge_name, Node)

plot_dbn_write_edge(Node, custom_edge = custom_edge)

plot_dbn_get_shared_parent(node, parent, Node)

plot_dbn_get_edge_text(parent, node, shared_parent, custom_edge)
}
\arguments{
\item{network}{A network object, passed from \code{plot.dbn}.}

\item{expand}{\code{logical(1)}, passed from \code{plot.dbn}.}

\item{node}{\code{character(1)} naming a node in the network.  This should
be one of the values in \code{network$node_attr$node_name}.}

\item{node_attr, }{the \code{network$node_attr} object.}

\item{node_name}{Character vector of node names.}

\item{custom_node}{The \code{custom_node} argument from the \code{plot.dbn}
call.}

\item{custom_edge}{The \code{custom_edge} argument from the \code{plot.dbn}
call.}

\item{custom_edge_name}{The names of the \code{custom_edge} argument 
from the \code{plot.dbn} call.}

\item{Node}{The \code{Node} object generated in \code{plot.dbn}. This 
holds the expanded node structure.}

\item{parent}{\code{character(1)} giving a parent of \code{node}.}

\item{shared_parent}{The \code{tbl_df} object
returned by \code{get_shared_parent}.}
}
\description{
Utilities to support the \code{plot.dbn} method.  These 
are not intended to be exposed to the user and may not receive the 
same rigor in argument checking or functional requirements.
}
\details{
\code{plot_dbn_expand_network} Expands the network to relate each node with
  all of its parents.  One relationship is displayed in each line of the
  data frame returned.

\code{plot_dbn_expand_dynamic_network} is a subroutine of 
  \code{plot_dbn_expand_network}, which performs the same expansion, and
  also expands dynamic nodes.

\code{plot_dbn_get_node_string} returns a character vector of all of the 
  nodes in the network plot.

\code{plot_dbn_get_star_node} makes adjustments to the \code{custom_node}
  argument to include all of the dynamic nodes when the star
  notation is employed.

\code{plot_dbn_plot_dbn_get_subgraph} returns a character vector with 
  the subgraph code for the plot.  A Subgraph is made for each dynamic 
  node, allowing the changes in time to be displayed in a column.

\code{plot_dbn_sanitize_custom_edge} formats edge definitions to 
  match the GraphViz requirements.  This is especially important when
  using dynamic nodes and the star notation.

\code{plot_dbn_write_edge} Creates the edge definitions for the plot

\code{plot_dbn_get_shared_parent} Identifies nodes with a shared parent.
  Honestly, I forget why this was important.  I might remember some day.

\code{plot_dbn_get_edge_text} generates the actual edge text to pass
  to GraphViz.
}
\author{
Benjamin Nutter
}

