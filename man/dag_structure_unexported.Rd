% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dag_structure_unexported.R
\name{dag_structure_unexported}
\alias{dag_structure_get_node_and_parent}
\alias{dag_structure_remove_temporal_suffix}
\alias{dag_structure_unexported}
\title{Unexported Utilities for \code{dag_structure}}
\usage{
dag_structure_remove_temporal_suffix(node_str)

dag_structure_get_node_and_parent(node_str)
}
\arguments{
\item{node_str}{A character vector of node definitions. It is assumed
that these come from the formula definition.}
}
\details{
These utilities are used to support the \code{dag_structure} 
  function.  They are not intended to be exposed to the user and 
  may not contain the same level of argument checks, or functional 
  requirements.
  
\code{dag_structure_remove_temporal_suffix} helps to identify the root 
node name of a dynamic node definition.  For example, \code{a[t - 1]}
becomes \code{a}.

\code{dag_structure_get_node_and_parent} returns a character matrix 
that lists the nodes in the network in the first column and the parents
of those nodes in the second column.

\code{dag_structure_get_node_str} converts the node formula into a 
character vector.

\code{dag_structure_get_future_dependency} looks for and returns 
nodes that are defined with a future dependence, such as \code{a[t + 1]}.
Future dependencies are not permitted.

\code{dag_structure_get_parent_list} divides the parents in the second 
column of the node and parents matrix into individual node identifiers.
}
\author{
Benjamin Nutter
}

