% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dag_structure.R
\name{dag_structure}
\alias{dag_structure}
\title{Convert a formula into an adjacency matrix}
\usage{
dag_structure(fm)
}
\arguments{
\item{fm}{A formula object with no left side. See details for formula 
structure.}
}
\value{
\code{dag_adj_matrix} returns an n x n matrix where n is the number of 
distinct nodes identified in the formula.  A 0 entry indicates no edge
exists between the nodes.  A 1 entry indicates an edge exists.

\code{dag_parentage} returns a named list with one element for each 
distinct node identified in the formula.  Each element is a character
vector of the parents for that node.  If a node as no elements, the 
entry is \code{character(0)}.
}
\description{
Building the network object requires an adjacency matrix to
  identify relationships, and an indication of inheritance to identify 
  which nodes inherit from which parents.  \code{dag_adj_matrix} creates
  the adjacency  matrix, and \code{dag_parentage} identifies the parents 
  for each node.
}
\details{
The formula is used to identify nodes and their parentage.  A node 
definition may be of the format \code{~ [node] | [parent1] * [parent2]}. 
Mutliple nodes may be defined by adding them with the \code{+} operator 
(\code{~ node1 | parent1 * parent2 + node2 | parent3}).

It is permissible to include a node only as a parent; it will still be 
identified as a distinct node in the network.  Each node that has at least 
one parent will need to have its own entry in the formula.

These functions are not strictly necessary, as the tasks they 
perform could be done by the \code{gRbase} package. However, the 
\code{gRbase} package depends on a couple of Bioconductor packages, and 
I've had too many headaches with the testing and checking of packages 
to include \code{RBGL}, so I'm just avoiding that headache.  I'm sure 
I'll come to regret that eventually, but since I don't need to full 
functionality of \code{gRbase}, I'll take my chances.
}
\section{Functional Requirements}{

\enumerate{
 \item Require a one-sided formula with no left side.
 \item Return an n x n matrix where n is the number of distinct nodes
 \item Return a 0/1 matrix where 1 indicates the presence of an edge
 \item Return a named list with one element per node. Each element gives
       the parents of that node
}
}
\author{
Benjamin Nutter
}

