% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/set_node_utilities.R
\name{set_node_utilities}
\alias{set_node_decision}
\alias{set_node_deterministic}
\alias{set_node_dynamic}
\alias{set_node_maxt}
\alias{set_node_parent}
\alias{set_node_utilities}
\alias{set_node_utility}
\title{Set Node Attributes}
\usage{
set_node_parent(network, node, add = TRUE, force = FALSE)

set_node_maxt(network, ...)

set_node_dynamic(network, ...)

set_node_decision(network, ...)

set_node_utility(network, ...)

set_node_deterministic(network, ...)
}
\arguments{
\item{network}{An object of class \code{dbn}}

\item{node}{A named list of character vectors. The name of each element 
corresponds to a node to which the vector of parent names is added or 
replaced. Dynamic style names (\code{parent[t-1]}) are acceptable so 
long as the node is dynamic.}

\item{add}{\code{logical(1)}. If \code{TRUE}, the node adopts all unique
parents available between the existing parents and the new parents.
If \code{FALSE}, the old parents are removed and new parents put in 
their place.}

\item{force}{\code{logical(1)}. If \code{FALSE} and the node has a model 
object, the new parents will not already exist in the model and 
\code{set_node} will cast an error.  If \code{force = TRUE}, the model
attribute will be dropped and a warning cast.}

\item{...}{named arguments where the name corresponds to a node name in 
\code{network} and the new value of the attribute. Use a 
\code{numeric(1)} for \code{set_node_maxt} and a \code{logical(1)}
for the others.}
}
\description{
The functions assist in setting node attributes after a 
  network has been initialized.
}
\section{Functional Requirements}{

\emph{set_node_parent}

\enumerate{
 \item When \code{add = TRUE} append the nodes to the \code{parent_raw} and 
   \code{parent} attributes of the node.
 \item When \code{add = FALSE} replace the nodes in \code{parent_raw} and 
   \code{parent} attributes with the new nodes.
 \item When \code{force = FALSE}, if a model object exists and new nodes 
   are being added that do not exist in the model, cast an error.
 \item When \code{force = TRUE}, if a model object exists and new nodes
   are being added that do not exist, drop the model and cast a warning.
 \item If any name in \code{parent} is not a node in \code{network}, 
   drop the element and cast a warning.
 \item Cast an error if \code{network} does not have class \code{dbn}
 \item Cast an error if \code{parent} is not a named list.
 \item Cast an error if \code{parent} has any non-character vector elements.
 \item Cast an error if \code{add} is not \code{logical(1)}
 \item Cast an error if \code{force} is not \code{logical(1)}
}

\emph{set_node_maxt}

\enumerate{
 \item Correctly reassigns the \code{max_t} attribute of the node.
 \item If the name of any element in ... does not match a node name 
   in the network, drop the element and cast a warning.
 \item Cast an error if x is not a dbn.
 \item Cast an error if any element in ... is not \code{numeric(1)}
 \item If any of the target nodes are not dynamic, cast an error if 
   any of them are parents of at least one other node.
 \item If any of the target nodes are not dynamic, and none of them are 
   parents of any other node, cast a warning naming any nodes that 
   are converted to dynamic.
}

\emph{set_node_dynamic, set_node_utility}
\enumerate{
 \item Correctly reassigns the \code{is_dynamic} attribute of the node.
  \item If the name of any element in \code{...} does not match
     a node name in the network, drop the element and cast a warning.
  \item Cast an error if \code{x} is not a \code{dbn}.
  \item Cast an error if any element in \code{...} is not \code{logical(1)}
  \item Cast an error if any of the target nodes have children.
}

\emph{set_node_decision, set_node_deterministic}
\enumerate{
  \item Correctly reassigns the \code{is_dynamic} attribute of the node.
  \item If the name of any element in \code{...} does not match
     a node name in the network, drop the element and cast a warning.
  \item Cast an error if \code{x} is not a \code{dbn}.
  \item Cast an error if any element in \code{...} is not \code{logical(1)}
}
}
\author{
Jarrod Dalton and Benjamin Nutter
}
\seealso{
\code{\link{get_node_utilities}}, \code{\link{is_node_utilities}}
}

